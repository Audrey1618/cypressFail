{
  "stats": {
    "suites": 6,
    "tests": 6,
    "passes": 5,
    "pending": 0,
    "failures": 1,
    "testsRegistered": 6,
    "passPercent": 83.33333333333333,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2024-05-31T14:12:49.300Z",
    "end": "2024-05-31T14:13:01.783Z",
    "duration": 12483
  },
  "results": [
    {
      "uuid": "ea52fa97-209a-495d-9624-8d2eb69e935e",
      "title": "",
      "fullFile": "cypress\\api-test\\TC_002_GET_request_more.js",
      "file": "cypress\\api-test\\TC_002_GET_request_more.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "50d67e79-2651-441d-99a9-f02da8754003",
          "title": "Test GET request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to send GET request and verify the response",
              "fullTitle": "Test GET request Should be able to send GET request and verify the response",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  url: 'https://jsonplaceholder.typicode.com/posts',\n  method: 'GET'\n}).then(response => {\n  // Destructure\n  let {\n    status,\n    body\n  } = response;\n  // Get a random element from array object\n  let roundedRandomIndex = Math.floor(Math.random() * body.length);\n  let randomObject = body[roundedRandomIndex];\n  // Verification\n  // expect(randomObject)\n  verifyNotEmpty('UserID', randomObject.userId);\n  verifyNotEmpty('Title', randomObject.title);\n  verifyNotEmpty('Body', randomObject.body);\n  //{\"userId\":6,\"id\":54,\"title\":\"sit asperiores ipsam eveniet odio non quia\",\"body\":\"totam corporis dignissimos\\nvitae dolorem ut occaecati accusamus\\nex velit deserunt\\net exercitationem vero incidunt corrupti mollitia\"}\n});",
              "err": {},
              "uuid": "be8f23f0-5083-48fe-b80e-de874e40bb6b",
              "parentUUID": "50d67e79-2651-441d-99a9-f02da8754003",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "be8f23f0-5083-48fe-b80e-de874e40bb6b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 104,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1015998e-8b01-45f8-bc31-25b8cb639c89",
      "title": "",
      "fullFile": "cypress\\api-test\\TC_003_POST_request.js",
      "file": "cypress\\api-test\\TC_003_POST_request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cc9e58e1-4ffd-4f23-9ca0-6a91586436b2",
          "title": "Test POST request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to send POST request and get response",
              "fullTitle": "Test POST request Should be able to send POST request and get response",
              "timedOut": null,
              "duration": 800,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let url = 'https://jsonplaceholder.typicode.com/posts';\nlet header = {\n  'Content-type': 'application/json; charset=UTF-8'\n};\nlet requestBody = {\n  title: 'foo',\n  body: 'bar',\n  userId: 1\n};\nlet requestObject = {\n  method: 'post',\n  url: url,\n  headers: header,\n  body: JSON.stringify(requestBody)\n};\ncy.request(requestObject).then(res => {\n  let {\n    status,\n    body\n  } = res;\n  expect(status).to.eq(201);\n  let {\n    userId,\n    id,\n    title\n  } = body;\n  let responseBody = body.body;\n  expect(userId).to.eq(requestBody.userId, 'UserId is not correct');\n  expect(id).to.eq(101, 'id is not correct');\n  expect(title).to.eq(requestBody.title, 'Title is not correct');\n  expect(responseBody).to.eq(requestBody.body, 'Body is not correct');\n});",
              "err": {},
              "uuid": "63e692ee-8566-4da2-a21b-1896243e7072",
              "parentUUID": "cc9e58e1-4ffd-4f23-9ca0-6a91586436b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "63e692ee-8566-4da2-a21b-1896243e7072"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 800,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "29d451ed-92b3-4ce5-803b-bd77c6f6d39a",
      "title": "",
      "fullFile": "cypress\\api-test\\TC_004_PUT_request.js",
      "file": "cypress\\api-test\\TC_004_PUT_request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f69a5008-f0d6-4357-9938-bef6878f5d03",
          "title": "Test PUT request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to send a request with PUT method",
              "fullTitle": "Test PUT request Should be able to send a request with PUT method",
              "timedOut": null,
              "duration": 811,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let url = 'https://jsonplaceholder.typicode.com/posts/1';\nlet header = {\n  'Content-type': 'application/json; charset=UTF-8'\n};\nlet requestBody = {\n  id: 1,\n  title: 'foo',\n  body: 'bar',\n  userId: 1\n};\nlet requestObject = {\n  method: 'PUT',\n  url: url,\n  headers: header,\n  body: JSON.stringify(requestBody)\n};\ncy.request(requestObject).then(res => {\n  let {\n    status\n  } = res;\n  let resBody = res.body;\n  let {\n    userId,\n    id,\n    title,\n    body\n  } = resBody;\n  // cy.log(JSON.stringify(res));\n  // cy.log(JSON.stringify(resBody));\n  expect(id).to.eq(requestBody.id, 'Id is not correct');\n  expect(title).to.eq(requestBody.title, 'title is not correct');\n  expect(body).to.eq(requestBody.body, 'body is not correct');\n  expect(userId).to.eq(requestBody.userId, 'userId is not correct');\n});",
              "err": {},
              "uuid": "34c55a47-5f17-4f58-a52b-7c0e361fe32a",
              "parentUUID": "f69a5008-f0d6-4357-9938-bef6878f5d03",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "34c55a47-5f17-4f58-a52b-7c0e361fe32a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 811,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "06b150d2-7eaa-40f7-abf5-9ec052e3d6ff",
      "title": "",
      "fullFile": "cypress\\api-test\\TC_005_DELETE_request.js",
      "file": "cypress\\api-test\\TC_005_DELETE_request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9562363a-db69-4cf8-ad9d-216361fa6b75",
          "title": "Test PUT request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to send a request with DELETE method",
              "fullTitle": "Test PUT request Should be able to send a request with DELETE method",
              "timedOut": null,
              "duration": 341,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let url = 'https://jsonplaceholder.typicode.com/posts/1';\ncy.request({\n  method: _Method.default.delete,\n  url: url\n}).then(res => {\n  let {\n    status\n  } = res;\n  cy.log(JSON.stringify(res));\n  expect(status).to.eq(200);\n  // cy.log(JSON.stringify(resBody));\n});",
              "err": {},
              "uuid": "1aa07041-0d32-4b31-8a4b-f96d0e3de0cc",
              "parentUUID": "9562363a-db69-4cf8-ad9d-216361fa6b75",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1aa07041-0d32-4b31-8a4b-f96d0e3de0cc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 341,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "069ca303-3d2f-40d2-a9a1-f8934a94ae17",
      "title": "",
      "fullFile": "cypress\\api-test\\TC_006_handle async.js",
      "file": "cypress\\api-test\\TC_006_handle async.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c05d5165-08c3-4553-bab7-bb07f3239ad3",
          "title": "Test handling async request in cypress",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to wait until a request resolved",
              "fullTitle": "Test handling async request in cypress Should be able to wait until a request resolved",
              "timedOut": null,
              "duration": 33,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let createdPostBody = {\n  title: 'foo',\n  body: 'bar',\n  userId: 1\n};\nlet updatePutBody = {\n  title: 'fooooooo',\n  body: 'bar2',\n  userId: 1\n};\n// CRUD: Create - Read - Update - Delete\ncy.createPost(createdPostBody).then(res => {\n  cy.getPost(Number(res.body.id) - 1);\n}).then(res => {\n  cy.updatePost(Number(res.body.id), updatePutBody);\n}).then(res => {\n  cy.deletePost(Number(res.body.id));\n}).then(res => {\n  cy.log(JSON.stringify(res));\n});",
              "err": {},
              "uuid": "1d3ab99a-df92-4020-a610-b4b9027bb672",
              "parentUUID": "c05d5165-08c3-4553-bab7-bb07f3239ad3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1d3ab99a-df92-4020-a610-b4b9027bb672"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 33,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ce22bf9f-bb00-4222-a36e-e29ec525f3b1",
      "title": "",
      "fullFile": "cypress\\api-test\\TC_001_GET_request.js",
      "file": "cypress\\api-test\\TC_001_GET_request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "20eb1cd6-505f-4631-8b35-cba498a6ec41",
          "title": "Test GET request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to send GET request and verify the response",
              "fullTitle": "Test GET request Should be able to send GET request and verify the response",
              "timedOut": null,
              "duration": 442,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  url: 'https://jsonplaceholder.typicode.com/posts',\n  method: 'GET'\n}).then(response => {\n  expect(response.status).to.eq(500);\n  expect(response.body.length).to.eq(100);\n});",
              "err": {
                "message": "AssertionError: expected 200 to equal 500",
                "estack": "AssertionError: expected 200 to equal 500\n    at Context.eval (webpack://cypress-api-learning/./cypress/api-test/TC_001_GET_request.js:7:30)",
                "diff": "- 200\n+ 500\n"
              },
              "uuid": "0e2bb151-7095-4a5c-afd7-785b497c4746",
              "parentUUID": "20eb1cd6-505f-4631-8b35-cba498a6ec41",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0e2bb151-7095-4a5c-afd7-785b497c4746"
          ],
          "pending": [],
          "skipped": [],
          "duration": 442,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}