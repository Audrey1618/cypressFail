{
  "stats": {
    "suites": 6,
    "tests": 6,
    "passes": 5,
    "pending": 0,
    "failures": 1,
    "testsRegistered": 6,
    "passPercent": 83.33333333333333,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2024-05-31T12:58:44.523Z",
    "end": "2024-05-31T12:58:56.817Z",
    "duration": 12294
  },
  "results": [
    {
      "uuid": "66e31e19-7ae4-46a3-88ea-d773d5bed0a0",
      "title": "",
      "fullFile": "cypress\\api-test\\TC_002_GET_request_more.js",
      "file": "cypress\\api-test\\TC_002_GET_request_more.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b54732ee-7071-4536-9548-a25037964bd2",
          "title": "Test GET request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to send GET request and verify the response",
              "fullTitle": "Test GET request Should be able to send GET request and verify the response",
              "timedOut": null,
              "duration": 85,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  url: 'https://jsonplaceholder.typicode.com/posts',\n  method: 'GET'\n}).then(response => {\n  // Destructure\n  let {\n    status,\n    body\n  } = response;\n  // Get a random element from array object\n  let roundedRandomIndex = Math.floor(Math.random() * body.length);\n  let randomObject = body[roundedRandomIndex];\n  // Verification\n  // expect(randomObject)\n  verifyNotEmpty('UserID', randomObject.userId);\n  verifyNotEmpty('Title', randomObject.title);\n  verifyNotEmpty('Body', randomObject.body);\n  //{\"userId\":6,\"id\":54,\"title\":\"sit asperiores ipsam eveniet odio non quia\",\"body\":\"totam corporis dignissimos\\nvitae dolorem ut occaecati accusamus\\nex velit deserunt\\net exercitationem vero incidunt corrupti mollitia\"}\n});",
              "err": {},
              "uuid": "3843cf19-823a-4e3e-bb14-f4903dc3fe33",
              "parentUUID": "b54732ee-7071-4536-9548-a25037964bd2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3843cf19-823a-4e3e-bb14-f4903dc3fe33"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 85,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "17af5dfe-0ae6-4fac-bbf9-7c9397e8b490",
      "title": "",
      "fullFile": "cypress\\api-test\\TC_003_POST_request.js",
      "file": "cypress\\api-test\\TC_003_POST_request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "09e1eacc-0549-47b1-a800-860a95dce146",
          "title": "Test POST request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to send POST request and get response",
              "fullTitle": "Test POST request Should be able to send POST request and get response",
              "timedOut": null,
              "duration": 871,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let url = 'https://jsonplaceholder.typicode.com/posts';\nlet header = {\n  'Content-type': 'application/json; charset=UTF-8'\n};\nlet requestBody = {\n  title: 'foo',\n  body: 'bar',\n  userId: 1\n};\nlet requestObject = {\n  method: 'post',\n  url: url,\n  headers: header,\n  body: JSON.stringify(requestBody)\n};\ncy.request(requestObject).then(res => {\n  let {\n    status,\n    body\n  } = res;\n  expect(status).to.eq(201);\n  let {\n    userId,\n    id,\n    title\n  } = body;\n  let responseBody = body.body;\n  expect(userId).to.eq(requestBody.userId, 'UserId is not correct');\n  expect(id).to.eq(101, 'id is not correct');\n  expect(title).to.eq(requestBody.title, 'Title is not correct');\n  expect(responseBody).to.eq(requestBody.body, 'Body is not correct');\n});",
              "err": {},
              "uuid": "401e0bf2-d013-4cfe-b24f-9bf2701f37a2",
              "parentUUID": "09e1eacc-0549-47b1-a800-860a95dce146",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "401e0bf2-d013-4cfe-b24f-9bf2701f37a2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 871,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "250a4c63-b3fa-434e-96c7-43daf906eb1a",
      "title": "",
      "fullFile": "cypress\\api-test\\TC_004_PUT_request.js",
      "file": "cypress\\api-test\\TC_004_PUT_request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8ea3204c-a16f-469d-bf5c-928afdc6616e",
          "title": "Test PUT request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to send a request with PUT method",
              "fullTitle": "Test PUT request Should be able to send a request with PUT method",
              "timedOut": null,
              "duration": 868,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let url = 'https://jsonplaceholder.typicode.com/posts/1';\nlet header = {\n  'Content-type': 'application/json; charset=UTF-8'\n};\nlet requestBody = {\n  id: 1,\n  title: 'foo',\n  body: 'bar',\n  userId: 1\n};\nlet requestObject = {\n  method: 'PUT',\n  url: url,\n  headers: header,\n  body: JSON.stringify(requestBody)\n};\ncy.request(requestObject).then(res => {\n  let {\n    status\n  } = res;\n  let resBody = res.body;\n  let {\n    userId,\n    id,\n    title,\n    body\n  } = resBody;\n  // cy.log(JSON.stringify(res));\n  // cy.log(JSON.stringify(resBody));\n  expect(id).to.eq(requestBody.id, 'Id is not correct');\n  expect(title).to.eq(requestBody.title, 'title is not correct');\n  expect(body).to.eq(requestBody.body, 'body is not correct');\n  expect(userId).to.eq(requestBody.userId, 'userId is not correct');\n});",
              "err": {},
              "uuid": "2367f480-283e-406a-95b0-474bf351225f",
              "parentUUID": "8ea3204c-a16f-469d-bf5c-928afdc6616e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2367f480-283e-406a-95b0-474bf351225f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 868,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "40fa2a6c-f172-4f41-a595-994ed6155620",
      "title": "",
      "fullFile": "cypress\\api-test\\TC_005_DELETE_request.js",
      "file": "cypress\\api-test\\TC_005_DELETE_request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ff2cf9e8-dd70-497c-8db1-f8171c2dabbe",
          "title": "Test PUT request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to send a request with DELETE method",
              "fullTitle": "Test PUT request Should be able to send a request with DELETE method",
              "timedOut": null,
              "duration": 351,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let url = 'https://jsonplaceholder.typicode.com/posts/1';\ncy.request({\n  method: _Method.default.delete,\n  url: url\n}).then(res => {\n  let {\n    status\n  } = res;\n  cy.log(JSON.stringify(res));\n  expect(status).to.eq(200);\n  // cy.log(JSON.stringify(resBody));\n});",
              "err": {},
              "uuid": "036ae014-808f-4fd3-9b23-c25d7ceef16b",
              "parentUUID": "ff2cf9e8-dd70-497c-8db1-f8171c2dabbe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "036ae014-808f-4fd3-9b23-c25d7ceef16b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 351,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4742a07f-fc61-4b18-9a9f-96209b673a13",
      "title": "",
      "fullFile": "cypress\\api-test\\TC_006_handle async.js",
      "file": "cypress\\api-test\\TC_006_handle async.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "026bcb15-286e-485e-8084-19bdd2675530",
          "title": "Test handling async request in cypress",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to wait until a request resolved",
              "fullTitle": "Test handling async request in cypress Should be able to wait until a request resolved",
              "timedOut": null,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let createdPostBody = {\n  title: 'foo',\n  body: 'bar',\n  userId: 1\n};\nlet updatePutBody = {\n  title: 'fooooooo',\n  body: 'bar2',\n  userId: 1\n};\n// CRUD: Create - Read - Update - Delete\ncy.createPost(createdPostBody).then(res => {\n  cy.getPost(Number(res.body.id) - 1);\n}).then(res => {\n  cy.updatePost(Number(res.body.id), updatePutBody);\n}).then(res => {\n  cy.deletePost(Number(res.body.id));\n}).then(res => {\n  cy.log(JSON.stringify(res));\n});",
              "err": {},
              "uuid": "592243b1-654e-42b0-9484-c869bd9bd348",
              "parentUUID": "026bcb15-286e-485e-8084-19bdd2675530",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "592243b1-654e-42b0-9484-c869bd9bd348"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bd98d829-1193-425a-a5cd-5edc880e3df6",
      "title": "",
      "fullFile": "cypress\\api-test\\TC_001_GET_request.js",
      "file": "cypress\\api-test\\TC_001_GET_request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "304256a5-0f11-49a3-b4a9-fbe412b10925",
          "title": "Test GET request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to send GET request and verify the response",
              "fullTitle": "Test GET request Should be able to send GET request and verify the response",
              "timedOut": null,
              "duration": 525,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  url: 'https://jsonplaceholder.typicode.com/posts',\n  method: 'GET'\n}).then(response => {\n  expect(response.status).to.eq(203);\n  expect(response.body.length).to.eq(100);\n});",
              "err": {
                "message": "AssertionError: expected 200 to equal 203",
                "estack": "AssertionError: expected 200 to equal 203\n    at Context.eval (webpack://cypress-api-learning/./cypress/api-test/TC_001_GET_request.js:7:30)",
                "diff": "- 200\n+ 203\n"
              },
              "uuid": "5d2adda2-3a09-49f1-aa7a-ad5b48ff0abe",
              "parentUUID": "304256a5-0f11-49a3-b4a9-fbe412b10925",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5d2adda2-3a09-49f1-aa7a-ad5b48ff0abe"
          ],
          "pending": [],
          "skipped": [],
          "duration": 525,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}